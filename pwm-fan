substitutions:
  device_name: "pwm"
  friendly_name: "PWM风扇"
  speed_low: "30"
  speed_med: "50"
  speed_full: "80"

esphome:
  name: pwm
  friendly_name: "${friendly_name}"
  on_boot:
    then:
#      - delay: 3s
#      - fan.turn_off:
#          id: fan_speed
      - delay: 3s
      - fan.turn_on:
          id: fan_speed
          speed: "${speed_low}"
#      - delay: 3s
#      - fan.turn_off:
#          id: fan_speed

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: 
  services:
    - service: send_raw_command
      variables:
        command: int[]
      then:
        - remote_transmitter.transmit_raw:
            code: !lambda 'return command;'
            carrier_frequency: 38kHz
    - service: send_nec_command
      variables:
        address: int
        command: int
      then:
        - remote_transmitter.transmit_nec:
            address: !lambda 'return address;'
            command: !lambda 'return command;'

ota:
  - platform: esphome
    password: 

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Pwm Fallback Hotspot"
    password: "K2L9Sakz6fbn"

captive_portal:

#i2c引脚 
i2c:
  sda: 21
  scl: 22 

remote_transmitter:
  pin: GPIO33
  carrier_duty_percent: 50%

remote_receiver:
  pin:
    number: GPIO32
    inverted: True
  dump: raw

output:
  - platform: ledc
    pin: GPIO25    
    frequency: 20000 Hz
    id: pwm_output

fan:
  - platform: speed
    id: fan_speed
    output: pwm_output
    speed_count: 100
    name: "${device_name} 开关"
   
number:
  - platform: template
    icon: "mdi:fan"
    id: speed_input
    name: "${device_name} 风速"
    lambda: |-
      return id(fan_speed).speed;
    step: 1
    min_value: 30
    max_value: 100
    unit_of_measurement: "%"
    update_interval: 1s
    set_action:
      then:
        - fan.turn_on:
            id: fan_speed
            speed: !lambda "return x;"
        - component.update: fanmode
        - component.update: sensor_fanspeed

select:
  - platform: template
    icon: "mdi:fan"
    name: "${device_name} 模式"
    id: fanmode
    update_interval: 1s
    lambda: |-
      if(id(fan_speed).speed <= ${speed_low})
        return std::string("Low");
      else if(id(fan_speed).speed == ${speed_med})
        return std::string("Medium");
      else if(id(fan_speed).speed >= ${speed_full})
        return std::string("Full");
      else
        return std::string("Custom");
    set_action:
      then:
        - lambda: |-
            auto call = id(fan_speed).turn_on();
            if(x == "Low")
              call.set_speed(${speed_low});
            else if(x == "Medium")
              call.set_speed(${speed_med});
            else if(x == "Full")
              call.set_speed(${speed_full});
            else
              call.set_speed(id(speed_input).state);
              
            call.perform();
        - component.update: speed_input
        - component.update: sensor_fanspeed
    options:
      - Low
      - Medium
      - Full
      - Custom

button:
  - platform: template
    icon: "mdi:fan-speed-1"
    name: "${device_name} 低速"
    id: fanlow
    on_press:
      - fan.turn_on:
          id: fan_speed
          speed: 30
  - platform: template
    icon: "mdi:fan-speed-2"
    name: "${device_name} 中速"
    on_press:
      - fan.turn_on:
          id: fan_speed
          speed: 50
  - platform: template
    icon: "mdi:fan-speed-3"
    name: "${device_name} 高速"
    on_press:
      - fan.turn_on:
          id: fan_speed
          speed: 80
  - platform: restart
    name: "${device_name} 初始化"

sensor:
  - platform: template
    id: sensor_fanspeed
    icon: "mdi:fan"
    name: "风扇速度"
    lambda: |-
      return id(fan_speed).speed;
    update_interval: 1s
    accuracy_decimals: 0
    unit_of_measurement: "%"
  - platform: aht10
    variant: aht20
    temperature:
      on_value_range:
      - below: 30.0
        then:
          - fan.turn_off: fan_speed
      - above: 31.0
        below: 40.0
        then:
          - fan.turn_on:
              id: fan_speed
              speed: "${speed_low}"
      - above: 41.0
        below: 50.0
        then:
          - fan.turn_on:
              id: fan_speed
              speed: "${speed_med}"
      - above: 51.0
        then:
          - fan.turn_on:
              id: fan_speed
              speed: "${speed_full}"
      name: "PWM-WENDU"
      id: dht_tp
    humidity:
      name: "PWM-SHIDU"
      id: dht_hp
    update_interval: 10s
